#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mt ESC GRAVE           &kp F1     &kp F2        &kp F3        &kp F4  &kp F5       &kp UP_ARROW            &kp F6     &kp F9     &kp F10     &kp F11         &kp F12     &lt 2 DELETE
&mt LEFT_GUI TAB        &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW          &kp Y      &kp U      &kp I      &kp O            &kp P       &kp MINUS
&mt LSHFT BSPC          &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW          &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LCTRL               &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW         &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp BSLH
&kp C_MUTE  &kp LCTRL  &kp UP_ARROW  &kp LEFT_ALT  &lt 3 ENTER   &mo 1              &kp ENTER               &kp TAB  &lt 3 SPACE  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp ESC     &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp LS(F12)           &kp PSCRN
&trans      &trans           &kp LC(S)       &kp LS(LC(F))    &kp LC(LA(F))    &kp LS(LC(T))      &mmv MOVE_DOWN   &kp END         &kp LC(LEFT_ARROW)          &kp UP_ARROW      &kp LC(RIGHT_ARROW)   &kp PG_UP             &kp ENTER
&trans      &kp LC(A)        &trans          &kp LC(C)        &kp LC(V)        &kp DELETE         &mmv MOVE_LEFT   &kp HOME        &kp LEFT_ARROW              &kp DOWN_ARROW    &kp RIGHT_ARROW       &kp PG_DN  &trans
&trans      &kp LC(Z)        &kp LC(X)       &trans           &kp LSHFT        &kp LSHFT          &mmv MOVE_RIGHT  &kp LS(END)     &kp LC(HOME)  &kp LC(END)   &trans            &trans             &kp LC(PAUSE)
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &kp DELETE           &trans           &trans      &zed_em_kay     &kp INSERT
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp ESC  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP    &trans   &trans &trans   &trans    &trans      &trans
&studio_unlock      &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &trans    &trans      &trans    &trans
&studio_unlock     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &trans    &trans
&studio_unlock     &sys_reset    &trans          &bootloader   &trans        &bootloader          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &rgb_ug RGB_OFF        &rgb_ug RGB_ON          &mkp LCLK        &rgb_ug RGB_EFR  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp ESC    &trans     &trans     &trans     &trans     &trans                   &mmv MOVE_UP                          &kp F6            &kp F7             &kp LS(N9)         &kp LS(N0)          &trans            &kp PSCRN
&trans   &kp LS(N4)     &kp N1     &kp N2     &kp N3      &kp N0                &mmv MOVE_DOWN                        &kp STAR         &kp LS(N1)          &kp LBRC           &kp RBRC            &kp LS(N2)        &trans
&trans   &kp DOT        &kp N4     &kp N5     &kp N6      &kp LS(BSLH)          &mmv MOVE_LEFT                        &kp LS(N7)       &kp LS(MINUS)       &kp LS(LBRC)       &kp LS(RBRC)        &kp LS(N5)         &kp LS(SQT)
&trans   &kp FSLH       &kp N7     &kp N8     &kp N9      &kp PLUS              &mmv MOVE_RIGHT                       &kp LS(N3)       &kp EQUAL           &kp LS(COMM)       &kp LS(DOT)         &kp LS(N6)         &kp LC(PAUSE)
&trans    &trans        &trans     &trans     &trans     &kp DELETE             &mkp LCLK                             &kp DELETE            &trans      &trans         &zed_em_kay         &kp INSERT
            >;      

            display-name = "symbols";
            sensor-bindings = <&scroll_encoder>;
        };        
    };
};
